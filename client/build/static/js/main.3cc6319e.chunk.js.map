{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Loader","react_default","a","createElement","className","App","state","username","cardName","dateOfBirth","cardExpiryDate","loading","paymentMethod","clearPage","_this","setState","fetchDetails","fetch","concat","then","res","json","data","catch","err","console","log","postOrder","postData","self","Object","assertThisInitialized","method","headers","Accept","Content-Type","body","JSON","stringify","alert","handleChange","event","defineProperty","target","value","handleSubmit","preventDefault","this","App_Loader","onSubmit","name","type","onChange","onBlur","placeholder","checked","disabled","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cc6319e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst Loader = () => (\n\t<div className=\"sk-folding-cube\">\n\t\t<div className=\"sk-cube1 sk-cube\" />\n\t\t<div className=\"sk-cube2 sk-cube\" />\n\t\t<div className=\"sk-cube4 sk-cube\" />\n\t\t<div className=\"sk-cube3 sk-cube\" />\n\t</div>\n);\n\nclass App extends Component {\n\tstate = {\n\t\tusername: \"\",\n\t\tcardName: \"\",\n\t\tdateOfBirth: \"\",\n\t\tcardExpiryDate: \"\",\n\t\tloading: false,\n\t\tpaymentMethod: \"\"\n\t};\n\n\tclearPage = () => {\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\tusername: \"\",\n\t\t\tcardName: \"\",\n\t\t\tdateOfBirth: \"\",\n\t\t\tcardExpiryDate: \"\"\n\t\t});\n\t};\n\n\tfetchDetails = () => {\n\t\tfetch(`/api/details/${this.state.username}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState(data);\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tconsole.log(\"something went wrong\");\n\t\t\t});\n\t};\n\n\tpostOrder = () => {\n\t\tconst postData = this.state;\n\t\tdelete postData.loading;\n\t\tlet self = this;\n\t\tfetch(\"/api/orders\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify(postData)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(function(data) {\n\t\t\t\tself.clearPage();\n\t\t\t\talert(\"Order placed!\");\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tself.clearPage();\n\t\t\t\tconsole.log(\"something went wrong\");\n\t\t\t});\n\t};\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\t[event[\"target\"][\"name\"]]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t});\n\t\tthis.postOrder();\n\t};\n\n\trender() {\n\t\t// const disabled = !(\n\t\t// \tthis.state.username &&\n\t\t// \tthis.state.cardName &&\n\t\t// \tthis.state.dateOfBirth &&\n\t\t// \tthis.state.cardExpiryDate\n\t\t// );\n\t\tconst disabled = false;\n\t\tif (this.state.loading) return <Loader />;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Swiggy Checkout</h1>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t<label className=\"label\">Username</label>\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tonBlur={this.fetchDetails}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"help is-success\">This username is available</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t<label className=\"label\">Name on card</label>\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"cardName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={this.state.cardName}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t<label className=\"label\">Date of birth</label>\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"dateOfBirth\"\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tplaceholder=\"Text input\"\n\t\t\t\t\t\t\t\tvalue={this.state.dateOfBirth}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t<label className=\"label\">Expiry date of the card</label>\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"cardExpiryDate\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"eg 11/22\"\n\t\t\t\t\t\t\t\tvalue={this.state.cardExpiryDate}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h2>Select payment paymentMethod</h2>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t<div className=\"column box1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\tvalue=\"mongodb\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tchecked={this.state.paymentMethod === \"mongodb\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>MongoDB</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"column box1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\tvalue=\"postegresql\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tchecked={this.state.paymentMethod === \"postegresql\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>PostegreSQL</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"column box1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\tvalue=\"mysql\"\n\t\t\t\t\t\t\t\tchecked={this.state.paymentMethod === \"mysql\"}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>MySQL</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"field is-grouped\">\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<button className=\"button is-link\" disabled={disabled}>\n\t\t\t\t\t\t\t\tOrder\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t<button className=\"button is-text\">Cancel</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<br />\n\t\t\t\t<pre>{JSON.stringify(this.state, true, 2)}</pre>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}